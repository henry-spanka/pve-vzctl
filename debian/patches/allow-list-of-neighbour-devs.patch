diff --git a/man/vz.conf.5.in b/man/vz.conf.5.in
index 037eb26..bde9ed5 100644
--- a/man/vz.conf.5.in
+++ b/man/vz.conf.5.in
@@ -1,4 +1,4 @@
-.TH vz.conf 5 "5 Dec 2012" "OpenVZ" "Containers"
+.TH vz.conf 5 "20 Apr 2015" "OpenVZ" "Containers"
 .SH NAME
 vz.conf \- global OpenVZ configuration file
 .SH SYNOPSIS
@@ -80,12 +80,20 @@ This parameter specifies the network device name which IP address will be
 used as the source IP. This is helpful in case more than one network
 interface is configured on HN and there is a need to specify the source
 IP address. Default is the first device in the network device list.
-.IP \fBNEIGHBOUR_DEVS\fR="\fBdetect\fR"
+.IP \fBNEIGHBOUR_DEVS\fR="\fBall\fR|\fBdetect\fR|\fBlist:\fIdev1\fR\ [\fIdev2\fR\ ...]"
 Controls on which interfaces to add/remove ARP records for a container IP, also
-which interfaces to use to query/announce ARP. If this is set to \fBdetect\fR,
-the right network interface (the one which is in the same subnet as a CT IP)
-will be chosen automatically. Any other value restores old (as of vzctl 3.0.19
-or older) behavior, when all the possible interfaces were used.
+which interfaces to use to query/announce ARP.
+
+If set to \fBall\fR, an empty string, or unset, all possible
+network interfaces (i.e. the ones that are UP and doesn't have NOARP,
+SLAVE, or LOOPBACK flags) are used. This is the default mode.
+
+If set to \fBdetect\fR, the right network interface
+(i.e. the one which is in the same subnet as a container IP)
+will be chosen automatically.
+
+If the value starts with \fBlist:\fR prefix, the space-separated list of
+interfaces following the prefix is used.
 .IP \fBERROR_ON_ARPFAIL\fR=\fByes\fR|\fBno\fR
 In case the value of this parameter is set to \fByes\fR, vzctl will fail to
 start a container if there is another host with the same IP present
diff --git a/scripts/vps-functions.in b/scripts/vps-functions.in
index 272bfc2..679f675 100755
--- a/scripts/vps-functions.in
+++ b/scripts/vps-functions.in
@@ -1,5 +1,5 @@
 #!/bin/sh
-#  Copyright (C) 2000-2009, Parallels, Inc. All rights reserved.
+#  Copyright (C) 2000-2015, Parallels, Inc. All rights reserved.
 #
 #  This program is free software; you can redistribute it and/or modify
 #  it under the terms of the GNU General Public License as published by
@@ -219,10 +219,28 @@ vz_get_neighbour_devs()
 	[ -n "$NETDEVICES" ] || vzwarning 'Device list is empty'
 	[ -n "$1" -a -n "$NETDEVICES" ] || return 1
 
-	if [ "$NEIGHBOUR_DEVS" != 'detect' ]; then
+	case "$NEIGHBOUR_DEVS" in
+	   detect)
+		# Fall through to detection code below
+		;;
+	   list:*)
+		echo "${NEIGHBOUR_DEVS#list:}"
+		return 0
+		;;
+	   all|"")
 		echo $NETDEVICES
 		return 0
-	fi
+		;;
+	   *)
+		cat << EOF >&2
+WARNING: unknown value for NEIGHBOUR_DEVS: ${NEIGHBOUR_DEVS}.
+Please fix it in @PKGCONFDIR@/vz.conf; see man vz.conf for allowed values.
+EOF
+		# Assume "all" for now
+		echo $NETDEVICES
+		return 0
+		;;
+	   esac
 
 	local route devs dev netdev
 
